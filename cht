#!/usr/bin/env bash

# Ensure required commands are installed
if ! command -v gum &> /dev/null; then
    echo "gum is required but not installed. Please install it and try again."
    exit 1
fi

if ! command -v sed &> /dev/null; then
    echo "sed is required but not installed. Please install it and try again."
    exit 1
fi

if ! command -v less &> /dev/null && ! command -v gum &> /dev/null; then
    echo "Either less or gum must be installed. Please install one of them and try again."
    exit 1
fi

# Define the tools and utils
languages=("Go" "Rust" "Zig" "TypeScript" "Python")
utils=("awk" "sed" "grep" "find" "cut" "sort" "uniq" "xargs" "curl" "wget")

# Function to URL encode the query
urlencode() {
    local length="${#1}"
    for (( i = 0; i < length; i++ )); do
        local c="${1:i:1}"
        case $c in
            [a-zA-Z0-9.~_-]) printf "$c" ;;
            *) printf '%%%02X' "'$c" ;;
        esac
    done
}

# Prompt the user to select between tools or utils
search_type=$(gum choose "Languages" "Utilities")

# Based on the selection, display the list and allow selection
if [[ $search_type == "Languages" ]]; then
    selected_item=$(printf "%s\n" "${languages[@]}" | gum filter --placeholder "Select a programming language")
else
    selected_item=$(printf "%s\n" "${utils[@]}" | gum filter --placeholder "Select a Linux utility")
fi

# Ask the user to enter a query
query=$(gum input --placeholder "Enter your query for $selected_item")

# URL encode the query
encoded_query=$(urlencode "$query")

# Perform the search, clean the output, and display it using less or gum pager
if command -v less &> /dev/null; then
    curl -s cht.sh/"$selected_item"/"$encoded_query" | sed -r "s/\x1B\[[0-9;]*[mGK]//g" | less
else
    curl -s cht.sh/"$selected_item"/"$encoded_query" | sed -r "s/\x1B\[[0-9;]*[mGK]//g" | gum pager
fi
